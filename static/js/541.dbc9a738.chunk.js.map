{"version":3,"file":"static/js/541.dbc9a738.chunk.js","mappings":"+SAEMA,EAAM,mCAECC,EAAS,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,oBAFF,cAEfG,EAFe,yBAKdA,EAASC,KAAKC,SALA,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,qDAWTC,EAAgB,mCAAG,WAAMC,GAAN,gGAELP,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBAC6CS,EAD7C,oBAFK,cAEtBN,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BC,QAAQC,IAAR,MAP4B,yDAAH,sDAWhBG,EAAkB,mCAAG,WAAMC,GAAN,gGAEPT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,oBAC+BX,EAD/B,oBAFO,cAExBG,EAFwB,yBAKvBA,EAASC,MALc,gCAO9BE,QAAQC,IAAR,MAP8B,yDAAH,sDAWlBK,EAAkB,mCAAG,WAAMD,GAAN,gGAEPT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,4BACuCX,EADvC,oBAFO,cAExBG,EAFwB,yBAKvBA,EAASC,KAAKS,MALS,gCAO9BP,QAAQC,IAAR,MAP8B,yDAAH,sDAWlBO,EAAkB,mCAAG,WAAMH,GAAN,gGAEPT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,4BACuCX,EADvC,oBAFO,cAExBG,EAFwB,OAK9BG,QAAQC,IAAIJ,EAASC,KAAKC,SALI,kBAMvBF,EAASC,KAAKC,SANS,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAH,qD,kHCS/B,UAnDa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAUT,EACX,GAAE,CAACA,IAEJ,IAAMS,EAAS,mCAAG,WAAMT,GAAN,uFAEdO,GAAW,GAFG,UAGSV,EAAAA,EAAAA,IAAmBG,GAH5B,OAGRU,EAHQ,OAIdP,EAAQO,GAJM,gDAMdL,EAAS,kCANK,yBAQdE,GAAW,GARG,4EAAH,sDAYf,OACE,gCACGD,GAAW,aACXF,IAAS,yBAAMA,KAChB,wBACGN,EAAKa,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IACED,EAASE,aAAT,yCACsCF,EAASE,cAC3CC,EAENC,IAAG,UAAKJ,EAASK,KAAd,gBAEL,4BACE,kCAAUL,EAASK,SACnB,uCAAeL,EAASM,kBAXnBN,EAAShB,GAerB,QAIR,C","sources":["api/fetchApi.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'a67a3cc6cc773faaf2b2aedd9d60aa22';\n\nexport const getMovies = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesDetails = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesCredits = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCredits } from 'api/fetchApi';\n\nimport NoImage from 'components/img/no-img.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchCast(movieId);\n  }, [movieId]);\n\n  const fetchCast = async movieId => {\n    try {\n      setLoading(true);\n      const dataCast = await fetchMoviesCredits(movieId);\n      setCast(dataCast);\n    } catch (error) {\n      setError('Ooops. Something went wrong...');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {loading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <ul>\n        {cast.map(castItem => {\n          return (\n            <li key={castItem.id}>\n              <img\n                src={\n                  castItem.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${castItem.profile_path}`\n                    : NoImage\n                }\n                alt={`${castItem.name} portrait`}\n              />\n              <div>\n                <p>Name: {castItem.name}</p>\n                <p>Character: {castItem.character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["KEY","getMovies","axios","response","data","results","console","log","getMoviesByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","movieId","useParams","useState","setCast","error","setError","loading","setLoading","useEffect","fetchCast","dataCast","map","castItem","src","profile_path","NoImage","alt","name","character"],"sourceRoot":""}